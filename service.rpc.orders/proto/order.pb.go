// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.28.1
// 	protoc        v3.21.12
// source: service.rpc.orders/proto/order.proto

package ordersproto

import (
	proto "github.com/yunuseskisan/touch/service.rpc.assets/proto"
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	timestamppb "google.golang.org/protobuf/types/known/timestamppb"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

type Instruction int32

const (
	Instruction_INSTRUCTION_UNKNOWN Instruction = 0
	Instruction_INSTRUCTION_BUY     Instruction = 1
	Instruction_INSTRUCTION_INVEST  Instruction = 2
	Instruction_INSTRUCTION_SELL    Instruction = 3
	Instruction_INSTRUCTION_RAISE   Instruction = 4
)

// Enum value maps for Instruction.
var (
	Instruction_name = map[int32]string{
		0: "INSTRUCTION_UNKNOWN",
		1: "INSTRUCTION_BUY",
		2: "INSTRUCTION_INVEST",
		3: "INSTRUCTION_SELL",
		4: "INSTRUCTION_RAISE",
	}
	Instruction_value = map[string]int32{
		"INSTRUCTION_UNKNOWN": 0,
		"INSTRUCTION_BUY":     1,
		"INSTRUCTION_INVEST":  2,
		"INSTRUCTION_SELL":    3,
		"INSTRUCTION_RAISE":   4,
	}
)

func (x Instruction) Enum() *Instruction {
	p := new(Instruction)
	*p = x
	return p
}

func (x Instruction) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Instruction) Descriptor() protoreflect.EnumDescriptor {
	return file_service_rpc_orders_proto_order_proto_enumTypes[0].Descriptor()
}

func (Instruction) Type() protoreflect.EnumType {
	return &file_service_rpc_orders_proto_order_proto_enumTypes[0]
}

func (x Instruction) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Instruction.Descriptor instead.
func (Instruction) EnumDescriptor() ([]byte, []int) {
	return file_service_rpc_orders_proto_order_proto_rawDescGZIP(), []int{0}
}

type Currency int32

const (
	Currency_CURRENCY_UNKNOWN Currency = 0
	Currency_CURRENCY_UNITS   Currency = 1
	Currency_CURRENCY_GBP     Currency = 3
)

// Enum value maps for Currency.
var (
	Currency_name = map[int32]string{
		0: "CURRENCY_UNKNOWN",
		1: "CURRENCY_UNITS",
		3: "CURRENCY_GBP",
	}
	Currency_value = map[string]int32{
		"CURRENCY_UNKNOWN": 0,
		"CURRENCY_UNITS":   1,
		"CURRENCY_GBP":     3,
	}
)

func (x Currency) Enum() *Currency {
	p := new(Currency)
	*p = x
	return p
}

func (x Currency) String() string {
	return protoimpl.X.EnumStringOf(x.Descriptor(), protoreflect.EnumNumber(x))
}

func (Currency) Descriptor() protoreflect.EnumDescriptor {
	return file_service_rpc_orders_proto_order_proto_enumTypes[1].Descriptor()
}

func (Currency) Type() protoreflect.EnumType {
	return &file_service_rpc_orders_proto_order_proto_enumTypes[1]
}

func (x Currency) Number() protoreflect.EnumNumber {
	return protoreflect.EnumNumber(x)
}

// Deprecated: Use Currency.Descriptor instead.
func (Currency) EnumDescriptor() ([]byte, []int) {
	return file_service_rpc_orders_proto_order_proto_rawDescGZIP(), []int{1}
}

type Order struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Id          string                 `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	CreatedAt   *timestamppb.Timestamp `protobuf:"bytes,2,opt,name=created_at,json=createdAt,proto3" json:"created_at,omitempty"`
	UpdatedAt   *timestamppb.Timestamp `protobuf:"bytes,3,opt,name=updated_at,json=updatedAt,proto3" json:"updated_at,omitempty"`
	AssetType   proto.AssetType        `protobuf:"varint,4,opt,name=asset_type,json=assetType,proto3,enum=emre.AssetType" json:"asset_type,omitempty"`
	Instruction Instruction            `protobuf:"varint,5,opt,name=instruction,proto3,enum=emre.Instruction" json:"instruction,omitempty"`
	Amount      int32                  `protobuf:"varint,6,opt,name=amount,proto3" json:"amount,omitempty"`
	Currency    Currency               `protobuf:"varint,7,opt,name=currency,proto3,enum=emre.Currency" json:"currency,omitempty"`
}

func (x *Order) Reset() {
	*x = Order{}
	if protoimpl.UnsafeEnabled {
		mi := &file_service_rpc_orders_proto_order_proto_msgTypes[0]
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		ms.StoreMessageInfo(mi)
	}
}

func (x *Order) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Order) ProtoMessage() {}

func (x *Order) ProtoReflect() protoreflect.Message {
	mi := &file_service_rpc_orders_proto_order_proto_msgTypes[0]
	if protoimpl.UnsafeEnabled && x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Order.ProtoReflect.Descriptor instead.
func (*Order) Descriptor() ([]byte, []int) {
	return file_service_rpc_orders_proto_order_proto_rawDescGZIP(), []int{0}
}

func (x *Order) GetId() string {
	if x != nil {
		return x.Id
	}
	return ""
}

func (x *Order) GetCreatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.CreatedAt
	}
	return nil
}

func (x *Order) GetUpdatedAt() *timestamppb.Timestamp {
	if x != nil {
		return x.UpdatedAt
	}
	return nil
}

func (x *Order) GetAssetType() proto.AssetType {
	if x != nil {
		return x.AssetType
	}
	return proto.AssetType(0)
}

func (x *Order) GetInstruction() Instruction {
	if x != nil {
		return x.Instruction
	}
	return Instruction_INSTRUCTION_UNKNOWN
}

func (x *Order) GetAmount() int32 {
	if x != nil {
		return x.Amount
	}
	return 0
}

func (x *Order) GetCurrency() Currency {
	if x != nil {
		return x.Currency
	}
	return Currency_CURRENCY_UNKNOWN
}

var File_service_rpc_orders_proto_order_proto protoreflect.FileDescriptor

var file_service_rpc_orders_proto_order_proto_rawDesc = []byte{
	0x0a, 0x24, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6f, 0x72,
	0x64, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x6f, 0x72, 0x64, 0x65, 0x72,
	0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x04, 0x65, 0x6d, 0x72, 0x65, 0x1a, 0x1f, 0x67, 0x6f,
	0x6f, 0x67, 0x6c, 0x65, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2f, 0x74, 0x69,
	0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x24, 0x73,
	0x65, 0x72, 0x76, 0x69, 0x63, 0x65, 0x2e, 0x72, 0x70, 0x63, 0x2e, 0x61, 0x73, 0x73, 0x65, 0x74,
	0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x2f, 0x61, 0x73, 0x73, 0x65, 0x74, 0x2e, 0x70, 0x72,
	0x6f, 0x74, 0x6f, 0x22, 0xb6, 0x02, 0x0a, 0x05, 0x4f, 0x72, 0x64, 0x65, 0x72, 0x12, 0x0e, 0x0a,
	0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x02, 0x69, 0x64, 0x12, 0x39, 0x0a,
	0x0a, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x0b, 0x32, 0x1a, 0x2e, 0x67, 0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x75, 0x66, 0x2e, 0x54, 0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x63,
	0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x39, 0x0a, 0x0a, 0x75, 0x70, 0x64, 0x61,
	0x74, 0x65, 0x64, 0x5f, 0x61, 0x74, 0x18, 0x03, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x67,
	0x6f, 0x6f, 0x67, 0x6c, 0x65, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x75, 0x66, 0x2e, 0x54,
	0x69, 0x6d, 0x65, 0x73, 0x74, 0x61, 0x6d, 0x70, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65,
	0x64, 0x41, 0x74, 0x12, 0x2e, 0x0a, 0x0a, 0x61, 0x73, 0x73, 0x65, 0x74, 0x5f, 0x74, 0x79, 0x70,
	0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x0f, 0x2e, 0x65, 0x6d, 0x72, 0x65, 0x2e, 0x41,
	0x73, 0x73, 0x65, 0x74, 0x54, 0x79, 0x70, 0x65, 0x52, 0x09, 0x61, 0x73, 0x73, 0x65, 0x74, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x33, 0x0a, 0x0b, 0x69, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69,
	0x6f, 0x6e, 0x18, 0x05, 0x20, 0x01, 0x28, 0x0e, 0x32, 0x11, 0x2e, 0x65, 0x6d, 0x72, 0x65, 0x2e,
	0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x52, 0x0b, 0x69, 0x6e, 0x73,
	0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x6d, 0x6f, 0x75,
	0x6e, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x61, 0x6d, 0x6f, 0x75, 0x6e, 0x74,
	0x12, 0x2a, 0x0a, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x18, 0x07, 0x20, 0x01,
	0x28, 0x0e, 0x32, 0x0e, 0x2e, 0x65, 0x6d, 0x72, 0x65, 0x2e, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e,
	0x63, 0x79, 0x52, 0x08, 0x63, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x2a, 0x80, 0x01, 0x0a,
	0x0b, 0x49, 0x6e, 0x73, 0x74, 0x72, 0x75, 0x63, 0x74, 0x69, 0x6f, 0x6e, 0x12, 0x17, 0x0a, 0x13,
	0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x55, 0x4e, 0x4b, 0x4e,
	0x4f, 0x57, 0x4e, 0x10, 0x00, 0x12, 0x13, 0x0a, 0x0f, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43,
	0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x42, 0x55, 0x59, 0x10, 0x01, 0x12, 0x16, 0x0a, 0x12, 0x49, 0x4e,
	0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x49, 0x4e, 0x56, 0x45, 0x53, 0x54,
	0x10, 0x02, 0x12, 0x14, 0x0a, 0x10, 0x49, 0x4e, 0x53, 0x54, 0x52, 0x55, 0x43, 0x54, 0x49, 0x4f,
	0x4e, 0x5f, 0x53, 0x45, 0x4c, 0x4c, 0x10, 0x03, 0x12, 0x15, 0x0a, 0x11, 0x49, 0x4e, 0x53, 0x54,
	0x52, 0x55, 0x43, 0x54, 0x49, 0x4f, 0x4e, 0x5f, 0x52, 0x41, 0x49, 0x53, 0x45, 0x10, 0x04, 0x2a,
	0x46, 0x0a, 0x08, 0x43, 0x75, 0x72, 0x72, 0x65, 0x6e, 0x63, 0x79, 0x12, 0x14, 0x0a, 0x10, 0x43,
	0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e, 0x4b, 0x4e, 0x4f, 0x57, 0x4e, 0x10,
	0x00, 0x12, 0x12, 0x0a, 0x0e, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43, 0x59, 0x5f, 0x55, 0x4e,
	0x49, 0x54, 0x53, 0x10, 0x01, 0x12, 0x10, 0x0a, 0x0c, 0x43, 0x55, 0x52, 0x52, 0x45, 0x4e, 0x43,
	0x59, 0x5f, 0x47, 0x42, 0x50, 0x10, 0x03, 0x42, 0x44, 0x5a, 0x42, 0x67, 0x69, 0x74, 0x68, 0x75,
	0x62, 0x2e, 0x63, 0x6f, 0x6d, 0x2f, 0x79, 0x75, 0x6e, 0x75, 0x73, 0x65, 0x73, 0x6b, 0x69, 0x73,
	0x61, 0x6e, 0x2f, 0x74, 0x6f, 0x75, 0x63, 0x68, 0x2f, 0x73, 0x65, 0x72, 0x76, 0x69, 0x63, 0x65,
	0x2e, 0x72, 0x70, 0x63, 0x2e, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x2f, 0x70, 0x72, 0x6f, 0x74,
	0x6f, 0x3b, 0x6f, 0x72, 0x64, 0x65, 0x72, 0x73, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_service_rpc_orders_proto_order_proto_rawDescOnce sync.Once
	file_service_rpc_orders_proto_order_proto_rawDescData = file_service_rpc_orders_proto_order_proto_rawDesc
)

func file_service_rpc_orders_proto_order_proto_rawDescGZIP() []byte {
	file_service_rpc_orders_proto_order_proto_rawDescOnce.Do(func() {
		file_service_rpc_orders_proto_order_proto_rawDescData = protoimpl.X.CompressGZIP(file_service_rpc_orders_proto_order_proto_rawDescData)
	})
	return file_service_rpc_orders_proto_order_proto_rawDescData
}

var file_service_rpc_orders_proto_order_proto_enumTypes = make([]protoimpl.EnumInfo, 2)
var file_service_rpc_orders_proto_order_proto_msgTypes = make([]protoimpl.MessageInfo, 1)
var file_service_rpc_orders_proto_order_proto_goTypes = []interface{}{
	(Instruction)(0),              // 0: emre.Instruction
	(Currency)(0),                 // 1: emre.Currency
	(*Order)(nil),                 // 2: emre.Order
	(*timestamppb.Timestamp)(nil), // 3: google.protobuf.Timestamp
	(proto.AssetType)(0),          // 4: emre.AssetType
}
var file_service_rpc_orders_proto_order_proto_depIdxs = []int32{
	3, // 0: emre.Order.created_at:type_name -> google.protobuf.Timestamp
	3, // 1: emre.Order.updated_at:type_name -> google.protobuf.Timestamp
	4, // 2: emre.Order.asset_type:type_name -> emre.AssetType
	0, // 3: emre.Order.instruction:type_name -> emre.Instruction
	1, // 4: emre.Order.currency:type_name -> emre.Currency
	5, // [5:5] is the sub-list for method output_type
	5, // [5:5] is the sub-list for method input_type
	5, // [5:5] is the sub-list for extension type_name
	5, // [5:5] is the sub-list for extension extendee
	0, // [0:5] is the sub-list for field type_name
}

func init() { file_service_rpc_orders_proto_order_proto_init() }
func file_service_rpc_orders_proto_order_proto_init() {
	if File_service_rpc_orders_proto_order_proto != nil {
		return
	}
	if !protoimpl.UnsafeEnabled {
		file_service_rpc_orders_proto_order_proto_msgTypes[0].Exporter = func(v interface{}, i int) interface{} {
			switch v := v.(*Order); i {
			case 0:
				return &v.state
			case 1:
				return &v.sizeCache
			case 2:
				return &v.unknownFields
			default:
				return nil
			}
		}
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_service_rpc_orders_proto_order_proto_rawDesc,
			NumEnums:      2,
			NumMessages:   1,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_service_rpc_orders_proto_order_proto_goTypes,
		DependencyIndexes: file_service_rpc_orders_proto_order_proto_depIdxs,
		EnumInfos:         file_service_rpc_orders_proto_order_proto_enumTypes,
		MessageInfos:      file_service_rpc_orders_proto_order_proto_msgTypes,
	}.Build()
	File_service_rpc_orders_proto_order_proto = out.File
	file_service_rpc_orders_proto_order_proto_rawDesc = nil
	file_service_rpc_orders_proto_order_proto_goTypes = nil
	file_service_rpc_orders_proto_order_proto_depIdxs = nil
}
